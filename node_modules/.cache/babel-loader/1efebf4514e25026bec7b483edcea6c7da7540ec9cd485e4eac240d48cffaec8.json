{"ast":null,"code":"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\ncreateApp(App).use(router).mount(\"#app\");\nimport \"bootstrap/dist/js/bootstrap.js\";\n\n// let MDB = {};\n// let openRequest = indexedDB.open('MDB', 1);\n\n// Удалить базу данных:\nlet deleteRequest = indexedDB.deleteDatabase('MDB');\ndeleteRequest.onsuccess / onerror; /*отслеживает результат*/\n\n// openRequest.onupgradeneeded = function(event) {\n//     // версия существующей базы данных меньше 2 (или база данных не существует)\n//     MDB = openRequest.result;\n//     console.log('event', event);\n//     switch(event.oldVersion) { // существующая (старая) версия базы данных\n//         case 0:\n//             // версия 0 означает, что на клиенте нет базы данных\n//             // выполнить инициализацию\n//             MDB.createObjectStore('counters');\n//             break;\n//         // case 1:\n//         //     // на клиенте версия базы данных 1\n//         //     // обновить\n//     }\n// };\n\n// openRequest.onerror = function() {\n//     console.error(\"Error\", openRequest.error);\n// };\n\n// openRequest.onsuccess = function() {\n//     MDB = openRequest.result;\n\n//     MDB.onversionchange = function() {\n//         MDB.close();\n//         alert(\"База данных устарела, пожалуйста, перезагрузите страницу.\")\n//     };\n\n//     // продолжить работу с базой данных, используя объект db\n//     console.log('MDB', MDB);\n// };\n\n// openRequest.onblocked = function() {\n//     // это событие не должно срабатывать, если мы правильно обрабатываем onversionchange\n\n//     // это означает, что есть ещё одно открытое соединение с той же базой данных\n//     // и он не был закрыт после того, как для него сработал db.onversionchange\n// };","map":{"version":3,"names":["createApp","App","router","use","mount","deleteRequest","indexedDB","deleteDatabase","onsuccess","onerror"],"sources":["/home/kup/my_projects/vue/kgm/src/main.js"],"sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\n\ncreateApp(App).use(router).mount(\"#app\");\n\nimport \"bootstrap/dist/js/bootstrap.js\";\n\n// let MDB = {};\n// let openRequest = indexedDB.open('MDB', 1);\n\n// Удалить базу данных:\nlet deleteRequest = indexedDB.deleteDatabase('MDB');\ndeleteRequest.onsuccess/onerror /*отслеживает результат*/\n\n// openRequest.onupgradeneeded = function(event) {\n//     // версия существующей базы данных меньше 2 (или база данных не существует)\n//     MDB = openRequest.result;\n//     console.log('event', event);\n//     switch(event.oldVersion) { // существующая (старая) версия базы данных\n//         case 0:\n//             // версия 0 означает, что на клиенте нет базы данных\n//             // выполнить инициализацию\n//             MDB.createObjectStore('counters');\n//             break;\n//         // case 1:\n//         //     // на клиенте версия базы данных 1\n//         //     // обновить\n//     }\n// };\n\n// openRequest.onerror = function() {\n//     console.error(\"Error\", openRequest.error);\n// };\n  \n// openRequest.onsuccess = function() {\n//     MDB = openRequest.result;\n    \n//     MDB.onversionchange = function() {\n//         MDB.close();\n//         alert(\"База данных устарела, пожалуйста, перезагрузите страницу.\")\n//     };\n    \n//     // продолжить работу с базой данных, используя объект db\n//     console.log('MDB', MDB);\n// };\n\n// openRequest.onblocked = function() {\n//     // это событие не должно срабатывать, если мы правильно обрабатываем onversionchange\n  \n//     // это означает, что есть ещё одно открытое соединение с той же базой данных\n//     // и он не был закрыт после того, как для него сработал db.onversionchange\n// };"],"mappings":"AAAA,OAAO,sCAAsC;AAC7C,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAE7BF,SAAS,CAACC,GAAG,CAAC,CAACE,GAAG,CAACD,MAAM,CAAC,CAACE,KAAK,CAAC,MAAM,CAAC;AAExC,OAAO,gCAAgC;;AAEvC;AACA;;AAEA;AACA,IAAIC,aAAa,GAAGC,SAAS,CAACC,cAAc,CAAC,KAAK,CAAC;AACnDF,aAAa,CAACG,SAAS,GAACC,OAAO,EAAC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}