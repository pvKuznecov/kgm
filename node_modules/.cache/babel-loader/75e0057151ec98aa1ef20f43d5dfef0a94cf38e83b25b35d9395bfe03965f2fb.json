{"ast":null,"code":"import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\ncreateApp(App).use(router).mount(\"#app\");\nimport \"bootstrap/dist/js/bootstrap.js\";\nlet MDB = {};\nlet openRequest = indexedDB.open('MDB', 1);\n\n// Удалить базу данных:\n// let deleteRequest = indexedDB.deleteDatabase(name)\n// // deleteRequest.onsuccess/onerror отслеживает результат\n\nopenRequest.onupgradeneeded = function (event) {\n  // версия существующей базы данных меньше 2 (или база данных не существует)\n  MDB = openRequest.result;\n\n  // switch(event.oldVersion) { // существующая (старая) версия базы данных\n  //     case 0:\n  //         // версия 0 означает, что на клиенте нет базы данных\n  //         // выполнить инициализацию\n  //     case 1:\n  //         // на клиенте версия базы данных 1\n  //         // обновить\n  // }\n};\nopenRequest.onerror = function () {\n  console.error(\"Error\", openRequest.error);\n};\nopenRequest.onsuccess = function () {\n  MDB = openRequest.result;\n  // продолжить работу с базой данных, используя объект db\n  console.log('MDB', MDB);\n};","map":{"version":3,"names":["createApp","App","router","use","mount","MDB","openRequest","indexedDB","open","onupgradeneeded","event","result","onerror","console","error","onsuccess","log"],"sources":["/home/kup/my_projects/vue/kgm/src/main.js"],"sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport router from \"./router\";\n\ncreateApp(App).use(router).mount(\"#app\");\n\nimport \"bootstrap/dist/js/bootstrap.js\";\n\nlet MDB = {};\nlet openRequest = indexedDB.open('MDB', 1);\n\n// Удалить базу данных:\n// let deleteRequest = indexedDB.deleteDatabase(name)\n// // deleteRequest.onsuccess/onerror отслеживает результат\n\nopenRequest.onupgradeneeded = function(event) {\n    // версия существующей базы данных меньше 2 (или база данных не существует)\n    MDB = openRequest.result;\n    \n    // switch(event.oldVersion) { // существующая (старая) версия базы данных\n    //     case 0:\n    //         // версия 0 означает, что на клиенте нет базы данных\n    //         // выполнить инициализацию\n    //     case 1:\n    //         // на клиенте версия базы данных 1\n    //         // обновить\n    // }\n};\n\nopenRequest.onerror = function() {\n    console.error(\"Error\", openRequest.error);\n};\n  \nopenRequest.onsuccess = function() {\n    MDB = openRequest.result;\n    // продолжить работу с базой данных, используя объект db\n    console.log('MDB', MDB);\n};"],"mappings":"AAAA,OAAO,sCAAsC;AAC7C,SAASA,SAAS,QAAQ,KAAK;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,MAAM,MAAM,UAAU;AAE7BF,SAAS,CAACC,GAAG,CAAC,CAACE,GAAG,CAACD,MAAM,CAAC,CAACE,KAAK,CAAC,MAAM,CAAC;AAExC,OAAO,gCAAgC;AAEvC,IAAIC,GAAG,GAAG,CAAC,CAAC;AACZ,IAAIC,WAAW,GAAGC,SAAS,CAACC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;;AAE1C;AACA;AACA;;AAEAF,WAAW,CAACG,eAAe,GAAG,UAASC,KAAK,EAAE;EAC1C;EACAL,GAAG,GAAGC,WAAW,CAACK,MAAM;;EAExB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ,CAAC;AAEDL,WAAW,CAACM,OAAO,GAAG,YAAW;EAC7BC,OAAO,CAACC,KAAK,CAAC,OAAO,EAAER,WAAW,CAACQ,KAAK,CAAC;AAC7C,CAAC;AAEDR,WAAW,CAACS,SAAS,GAAG,YAAW;EAC/BV,GAAG,GAAGC,WAAW,CAACK,MAAM;EACxB;EACAE,OAAO,CAACG,GAAG,CAAC,KAAK,EAAEX,GAAG,CAAC;AAC3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}