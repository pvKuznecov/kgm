{"ast":null,"code":"let MDB = {};\n// let openRequest = indexedDB.open('MDB', 1);\n\n// Удалить базу данных:\nlet deleteRequest = indexedDB.deleteDatabase('MDB');\ndeleteRequest.onsuccess / onerror; /*отслеживает результат*/\n\n// openRequest.onupgradeneeded = function(event) {\n//     // версия существующей базы данных меньше 2 (или база данных не существует)\n//     MDB = openRequest.result;\n//     console.log('event', event);\n//     switch(event.oldVersion) { // существующая (старая) версия базы данных\n//         case 0:\n//             // версия 0 означает, что на клиенте нет базы данных\n//             // выполнить инициализацию\n//             MDB.createObjectStore('counter');\n\n//             let transaction = MDB.transaction(\"counter\", \"readwrite\");\n//             // получить хранилище объектов для работы с ним\n//             let counters = transaction.objectStore(\"counter\");\n//             let counter = {\n//                 id: 1,\n//                 full: 100,\n//                 now: 100\n//             };\n\n//             let request = counters.add(counter);\n//             request.onsuccess = function() {\n//                 console.log(\"Счетчик добавлен в хранилище\", request.result);\n//             };\n\n//             request.onerror = function() {\n//                 console.log(\"Ошибка\", request.error);\n//             };\n\n//             break;\n//         // case 1:\n//         //     // на клиенте версия базы данных 1\n//         //     // обновить\n//     }\n// };\n\n// openRequest.onerror = function() {\n//     console.error(\"Error\", openRequest.error);\n// };\n\n// openRequest.onsuccess = function() {\n//     MDB = openRequest.result;\n\n//     MDB.onversionchange = function() {\n//         MDB.close();\n//         alert(\"База данных устарела, пожалуйста, перезагрузите страницу.\")\n//     };\n\n//     // продолжить работу с базой данных, используя объект db\n//     console.log('MDB', MDB);\n// };\n\n// openRequest.onblocked = function() {\n//     // это событие не должно срабатывать, если мы правильно обрабатываем onversionchange\n\n//     // это означает, что есть ещё одно открытое соединение с той же базой данных\n//     // и он не был закрыт после того, как для него сработал db.onversionchange\n// };\n\nexport default MDB;","map":{"version":3,"names":["MDB","deleteRequest","indexedDB","deleteDatabase","onsuccess","onerror"],"sources":["/home/kup/my_projects/vue/kgm/src/MDB.js"],"sourcesContent":["let MDB = {};\n// let openRequest = indexedDB.open('MDB', 1);\n\n// Удалить базу данных:\nlet deleteRequest = indexedDB.deleteDatabase('MDB');\ndeleteRequest.onsuccess/onerror /*отслеживает результат*/\n\n// openRequest.onupgradeneeded = function(event) {\n//     // версия существующей базы данных меньше 2 (или база данных не существует)\n//     MDB = openRequest.result;\n//     console.log('event', event);\n//     switch(event.oldVersion) { // существующая (старая) версия базы данных\n//         case 0:\n//             // версия 0 означает, что на клиенте нет базы данных\n//             // выполнить инициализацию\n//             MDB.createObjectStore('counter');\n\n//             let transaction = MDB.transaction(\"counter\", \"readwrite\");\n//             // получить хранилище объектов для работы с ним\n//             let counters = transaction.objectStore(\"counter\");\n//             let counter = {\n//                 id: 1,\n//                 full: 100,\n//                 now: 100\n//             };\n\n//             let request = counters.add(counter);\n//             request.onsuccess = function() {\n//                 console.log(\"Счетчик добавлен в хранилище\", request.result);\n//             };\n\n//             request.onerror = function() {\n//                 console.log(\"Ошибка\", request.error);\n//             };\n\n//             break;\n//         // case 1:\n//         //     // на клиенте версия базы данных 1\n//         //     // обновить\n//     }\n// };\n\n// openRequest.onerror = function() {\n//     console.error(\"Error\", openRequest.error);\n// };\n  \n// openRequest.onsuccess = function() {\n//     MDB = openRequest.result;\n    \n//     MDB.onversionchange = function() {\n//         MDB.close();\n//         alert(\"База данных устарела, пожалуйста, перезагрузите страницу.\")\n//     };\n    \n//     // продолжить работу с базой данных, используя объект db\n//     console.log('MDB', MDB);\n// };\n\n// openRequest.onblocked = function() {\n//     // это событие не должно срабатывать, если мы правильно обрабатываем onversionchange\n  \n//     // это означает, что есть ещё одно открытое соединение с той же базой данных\n//     // и он не был закрыт после того, как для него сработал db.onversionchange\n// };\n\n\nexport default MDB;"],"mappings":"AAAA,IAAIA,GAAG,GAAG,CAAC,CAAC;AACZ;;AAEA;AACA,IAAIC,aAAa,GAAGC,SAAS,CAACC,cAAc,CAAC,KAAK,CAAC;AACnDF,aAAa,CAACG,SAAS,GAACC,OAAO,EAAC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAGA,eAAeL,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}